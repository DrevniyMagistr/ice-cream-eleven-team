{"version":3,"sources":["js/slider.js","js/mobile-menu.js","js/anchor.js","js/accordion-card.js","index.js"],"names":["$","slick","dots","infinite","speed","slidesToShow","arrows","refs","openModalBtn","document","querySelector","closeModalBtn","mobMenu","buttonBuy","clickMenuItem","querySelectorAll","toggleModal","classList","toggle","forEach","e","addEventListener","window","matchMedia","matches","contains","remove","bodyScrollLock","enableBodyScroll","body","scrollNav","click","removeClass","addClass","stop","animate","scrollTop","attr","offset","top","Accordion","constructor","el","summary","products__card","animation","isClosing","isExpanding","onClick","preventDefault","style","overflow","open","shrink","startHeight","offsetHeight","endHeight","cancel","height","duration","easing","onfinish","onAnimationFinish","oncancel","requestAnimationFrame","expand"],"mappings":"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","file":"src.b0fe2e0f.js","sourceRoot":"../src","sourcesContent":["//$('.single-item').slick();\n$('.review-js').slick({\n  dots: true,\n  infinite: true,\n  speed: 300,\n    slidesToShow: 1,\n  arrows: false\n});","(() => {\n    const refs = {\n      openModalBtn: document.querySelector('[data-modal-open]'),\n      closeModalBtn: document.querySelector('[data-modal-close]'),\n      mobMenu: document.querySelector('[data-mobile-menu]'),\n      buttonBuy: document.querySelector('[data-button-buy]'),\n      clickMenuItem: document.querySelectorAll('[data-mobile-item]')\n    };\n    refs.clickMenuItem.forEach((e)=>{\n      e.addEventListener('click',toggleModal)\n    })\n  \n    refs.openModalBtn.addEventListener('click', toggleModal);\n    refs.closeModalBtn.addEventListener('click', toggleModal);\n  \n    window.matchMedia('(min-width: 1279px)').addEventListener('change', e => {\n      if (!e.matches) return;\n      if(refs.mobMenu.classList.contains('is-open')){\n        refs.buttonBuy.classList.remove('is-hidden');\n        refs.openModalBtn.classList.remove('is-hidden');\n        refs.mobMenu.classList.toggle('is-open');\n        bodyScrollLock.enableBodyScroll(document.body);\n      }  \n      \n    });\n  \n    function toggleModal() {\n      refs.openModalBtn.classList.toggle('is-hidden');    \n      refs.buttonBuy.classList.toggle('is-hidden');\n      refs.mobMenu.classList.toggle('is-open');\n      \n    }\n  })();","function scrollNav() {\n  $('.menu__link, .mobile-menu__link, .hero__btn--dark, .hero__btn--light').click(function(){\n    $(\".active\").removeClass(\"active\");     \n    $(this).addClass(\"active\");\n    \n    $('html, body').stop().animate({\n      scrollTop: $($(this).attr('href')).offset().top - 160\n    }, 700);\n    return false;\n  });\n}\nscrollNav();\n\n","class Accordion {\n  constructor(el) {\n    this.el = el;\n    this.summary = el.querySelector('summary');\n    this.products__card = el.querySelector('.products__card');\n\n    this.animation = null;\n    this.isClosing = false;\n    this.isExpanding = false;\n    this.summary.addEventListener('click', e => this.onClick(e));\n  }\n\n  onClick(e) {\n    // Stop default behaviour from the browser\n    e.preventDefault();\n    // Add an overflow on the <details> to avoid content overflowing\n    this.el.style.overflow = 'hidden';\n    // Check if the element is being closed or is already closed\n    if (this.isClosing || !this.el.open) {\n      this.open();\n      // Check if the element is being openned or is already open\n    } else if (this.isExpanding || this.el.open) {\n      this.shrink();\n    }\n  }\n\n  shrink() {\n    // Set the element as \"being closed\"\n    this.isClosing = true;\n\n    // Store the current height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the height of the summary\n    const endHeight = `${this.summary.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate(\n      {\n        // Set the keyframes from the startHeight to endHeight\n        height: [startHeight, endHeight],\n      },\n      {\n        duration: 400,\n        easing: 'ease-out',\n      },\n    );\n\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(false);\n    // If the animation is cancelled, isClosing variable is set to false\n    this.animation.oncancel = () => (this.isClosing = false);\n  }\n\n  open() {\n    // Apply a fixed height on the element\n    this.el.style.height = `${this.el.offsetHeight}px`;\n    // Force the [open] attribute on the details element\n    this.el.open = true;\n    // Wait for the next frame to call the expand function\n    window.requestAnimationFrame(() => this.expand());\n  }\n\n  expand() {\n    // Set the element as \"being expanding\"\n    this.isExpanding = true;\n    // Get the current fixed height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the open height of the element (summary height + content height)\n    const endHeight = `${this.summary.offsetHeight + this.products__card.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate(\n      {\n        // Set the keyframes from the startHeight to endHeight\n        height: [startHeight, endHeight],\n      },\n      {\n        duration: 400,\n        easing: 'ease-out',\n      },\n    );\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(true);\n    // If the animation is cancelled, isExpanding variable is set to false\n    this.animation.oncancel = () => (this.isExpanding = false);\n  }\n\n  onAnimationFinish(open) {\n    // Set the open attribute based on the parameter\n    this.el.open = open;\n    // Clear the stored animation\n    this.animation = null;\n    // Reset isClosing & isExpanding\n    this.isClosing = false;\n    this.isExpanding = false;\n    // Remove the overflow hidden and the fixed height\n    this.el.style.height = this.el.style.overflow = '';\n  }\n}\n\ndocument.querySelectorAll('details').forEach(el => {\n  new Accordion(el);\n});\n","import './sass/main.scss';\nimport './js/slider.js';\nimport './js/modal.js';\nimport './js/mobile-menu.js';\nimport './js/anchor.js';\nimport './js/accordion-card.js';\n// import './js/header-fixed.js';"]}